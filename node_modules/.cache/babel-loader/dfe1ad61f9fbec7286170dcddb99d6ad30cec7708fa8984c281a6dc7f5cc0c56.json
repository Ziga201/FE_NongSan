{"ast":null,"code":"import{Fragment}from'react';import{BrowserRouter as Router,Routes,Route,Link,Navigate}from'react-router-dom';import{publicRoutes,privateRoutes,adminRoutes}from\"./routes\";import{DefaultLayout}from\"./components/Layout\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var admin=JSON.parse(localStorage.getItem('admin'));var user=JSON.parse(localStorage.getItem('user'));return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(Routes,{children:[publicRoutes.map(function(route,index){var Page=route.component;var Layout=DefaultLayout;if(route.layout){Layout=route.layout;}else if(route.layout===null){Layout=Fragment;}return/*#__PURE__*/_jsx(Route,{path:route.path,element:/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsx(Page,{})})},index);}),user?privateRoutes.map(function(route,index){var Page=route.component;var Layout=DefaultLayout;if(route.layout){Layout=route.layout;}else if(route.layout===null){Layout=Fragment;}return/*#__PURE__*/_jsx(Route,{path:route.path,element:/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsx(Page,{})})},index);}):privateRoutes.map(function(route,index){return/*#__PURE__*/_jsx(Route,{path:route.path,element:/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})},index);})// <Route path=\"/admin\" element={} />\n,admin?adminRoutes.map(function(route,index){var Page=route.component;var Layout=DefaultLayout;if(route.layout){Layout=route.layout;}else if(route.layout===null){Layout=Fragment;}return/*#__PURE__*/_jsx(Route,{path:route.path,element:/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsx(Page,{})})},index);}):adminRoutes.map(function(route,index){return/*#__PURE__*/_jsx(Route,{path:route.path,element:/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})},index);})// <Route path=\"/admin\" element={} />\n]})})});}export default App;","map":{"version":3,"names":["Fragment","BrowserRouter","Router","Routes","Route","Link","Navigate","publicRoutes","privateRoutes","adminRoutes","DefaultLayout","jsx","_jsx","jsxs","_jsxs","App","admin","JSON","parse","localStorage","getItem","user","children","className","map","route","index","Page","component","Layout","layout","path","element","to"],"sources":["D:/HOC/LTS/WebNongSan/Front-end/src/App.js"],"sourcesContent":["import { Fragment } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Link, Navigate } from 'react-router-dom';\r\nimport { publicRoutes, privateRoutes, adminRoutes } from '~/routes';\r\nimport { DefaultLayout } from '~/components/Layout';\r\nfunction App() {\r\n    const admin = JSON.parse(localStorage.getItem('admin'));\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <Routes>\r\n                    {publicRoutes.map((route, index) => {\r\n                        const Page = route.component;\r\n\r\n                        let Layout = DefaultLayout;\r\n\r\n                        if (route.layout) {\r\n                            Layout = route.layout;\r\n                        } else if (route.layout === null) {\r\n                            Layout = Fragment;\r\n                        }\r\n                        return (\r\n                            <Route\r\n                                key={index}\r\n                                path={route.path}\r\n                                element={\r\n                                    <Layout>\r\n                                        <Page />\r\n                                    </Layout>\r\n                                }\r\n                            />\r\n                        );\r\n                    })}\r\n\r\n                    {/* {privateRoutes.map((route, index) => {\r\n                        const Page = route.component;\r\n\r\n                        let Layout = DefaultLayout;\r\n\r\n                        if (route.layout) {\r\n                            Layout = route.layout;\r\n                        } else if (route.layout === null) {\r\n                            Layout = Fragment;\r\n                        }\r\n                        return localStorage.getItem('user') ? (\r\n                            <Route\r\n                                key={index}\r\n                                path={route.path}\r\n                                element={\r\n                                    <Layout>\r\n                                        <Page />\r\n                                    </Layout>\r\n                                }\r\n                            />\r\n                        ) : (\r\n                            (window.location.href = '/login')\r\n                        );\r\n\r\n                \r\n                    })} */}\r\n\r\n                    {\r\n                        user\r\n                            ? privateRoutes.map((route, index) => {\r\n                                  const Page = route.component;\r\n                                  let Layout = DefaultLayout;\r\n\r\n                                  if (route.layout) {\r\n                                      Layout = route.layout;\r\n                                  } else if (route.layout === null) {\r\n                                      Layout = Fragment;\r\n                                  }\r\n                                  return (\r\n                                      <Route\r\n                                          key={index}\r\n                                          path={route.path}\r\n                                          element={\r\n                                              <Layout>\r\n                                                  <Page />\r\n                                              </Layout>\r\n                                          }\r\n                                      />\r\n                                  );\r\n                              })\r\n                            : privateRoutes.map((route, index) => {\r\n                                  return <Route key={index} path={route.path} element={<Navigate to=\"/login\" />} />;\r\n                              })\r\n                        // <Route path=\"/admin\" element={} />\r\n                    }\r\n\r\n                    {\r\n                        admin\r\n                            ? adminRoutes.map((route, index) => {\r\n                                  const Page = route.component;\r\n                                  let Layout = DefaultLayout;\r\n\r\n                                  if (route.layout) {\r\n                                      Layout = route.layout;\r\n                                  } else if (route.layout === null) {\r\n                                      Layout = Fragment;\r\n                                  }\r\n                                  return (\r\n                                      <Route\r\n                                          key={index}\r\n                                          path={route.path}\r\n                                          element={\r\n                                              <Layout>\r\n                                                  <Page />\r\n                                              </Layout>\r\n                                          }\r\n                                      />\r\n                                  );\r\n                              })\r\n                            : adminRoutes.map((route, index) => {\r\n                                  return <Route key={index} path={route.path} element={<Navigate to=\"/login\" />} />;\r\n                              })\r\n                        // <Route path=\"/admin\" element={} />\r\n                    }\r\n                </Routes>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}